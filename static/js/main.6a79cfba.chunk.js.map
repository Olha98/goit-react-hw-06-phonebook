{"version":3,"sources":["Components/Form/Form.module.css","Components/Form/ListPeople/ListPeople.module.css","Components/Form/FillterForm/FillterForm.module.css","Components/Form/ContactForm/ContactForm.module.css","Components/Alert/Alert.module.css","Redux/Actions/Actions.js","Components/Form/ListPeople/ListItemPeople/ListItemPeople.js","Components/Form/ListPeople/ListPeople.js","Components/Form/FillterForm/FillterForm.js","Components/Form/ContactForm/ContactForm.js","Components/Alert/Alert.js","Components/Form/Form.js","Redux/Reducers/Reducers.js","Redux/store.js","index.js"],"names":["module","exports","addContact","createAction","contact","payload","removeContact","contactID","filterChange","filter","alertError","connect","dispatch","onRemoveContact","e","Actions","target","name","number","id","className","style","listItem","type","onClick","state","contacts","toLowerCase","includes","console","log","TransitionGroup","list","map","CSSTransition","key","timeout","classNames","uuidv4","mapDispatchToProps","onfilterChange","value","contactsTitle","onChange","ContactForm","handleChange","containerUser","AlertModal","Alert","variant","css","boxAlert","Heading","initialState","App","setState","handleSubmit","preventDefault","errorContacts","props","length","find","errorItem","alertShow","onAddContacts","onAlertError","setTimeout","this","alert","in","appear","unmountOnExit","onSubmit","formContainer","Component","createReducer","action","combineReducers","store","configureStore","reducer","contactReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a79cfba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Form_appear__1cnmz\",\"appearActive\":\"Form_appearActive__3GUjI\",\"formContainer\":\"Form_formContainer__1SZM4\",\"boxAlert\":\"Form_boxAlert__3HSOV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ListPeople_list__3OcX-\",\"enter\":\"ListPeople_enter__3BXgg\",\"enterActive\":\"ListPeople_enterActive__29nPL\",\"exit\":\"ListPeople_exit___rUiq\",\"exitActive\":\"ListPeople_exitActive__1qOeQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsTitle\":\"FillterForm_contactsTitle__1LHXl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerUser\":\"ContactForm_containerUser__2BrJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Alert_enter__1vq3-\",\"enterActive\":\"Alert_enterActive__OU6Z_\",\"exit\":\"Alert_exit__2lLsU\",\"exitActive\":\"Alert_exitActive__KfH1f\",\"alert\":\"Alert_alert__2s1Y_\",\"message\":\"Alert_message__3uYcq\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/ADD', contact=>({ payload:{contact}}))\r\nconst removeContact = createAction('contact/REMOVE', contactID=>({ payload: {contactID}}))\r\nconst filterChange = createAction('contacts/filterChange', filter=>({ payload:{filter}}))\r\nconst alertError = createAction('contacts/alertError')\r\n\r\nexport default {addContact, removeContact, filterChange, alertError}","import React from 'react';\r\nimport style from './ListItemPeople.module.css'\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../../../../Redux/Actions/Actions';\r\n\r\nconst ListItemPeople = ({ name, number, id, onRemoveContact }) => {\r\n  return (\r\n    <>\r\n      <li className={style.listItem}>{name}: {number}\r\n      <button type=\"button\" onClick={onRemoveContact} name={id}>Delite</button>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRemoveContact: (e) => {\r\n      dispatch(Actions.removeContact(e.target.name))},\r\n  } \r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ListItemPeople)\r\n\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ListItemPeople from './ListItemPeople/ListItemPeople';\r\nimport style from './ListPeople.module.css'\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst ListPeople = ({ contacts}) => {\r\nconsole.log(contacts, \"contacts\")\r\n  return (\r\n    <TransitionGroup className={style.list}>\r\n\r\n      {contacts.map(contact =>\r\n        <CSSTransition\r\n          key={contact.id}\r\n          timeout={500}\r\n          classNames={style}>\r\n          <ListItemPeople key={uuidv4()} {...contact}/>\r\n        </CSSTransition>\r\n\r\n      )}\r\n    </TransitionGroup>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({state}) => ({\r\n contacts: state.contacts.filter(contact => contact.name.toLowerCase().includes(state.filter.toLowerCase()))\r\n})\r\n\r\nexport default connect(mapStateToProps)(ListPeople)\r\n\r\n","import React from 'react';\r\nimport style from './FillterForm.module.css'\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../../../Redux/Actions/Actions'\r\n\r\nconst FillterForm=({value, onfilterChange})=>{\r\nreturn(\r\n  <>\r\n    <h2>Contacts</h2>\r\n      <label>\r\n      <p className={style.contactsTitle}>Find contacts by name</p>\r\n          <input type=\"text\" name=\"filter\"  value={value} onChange={(e) => {\r\n            onfilterChange(e.target.value)\r\n            }}/>\r\n      </label>\r\n</>\r\n)}\r\n\r\nconst mapDispatchToProps = {\r\n  onfilterChange: Actions.filterChange,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(FillterForm)\r\n\r\n","import React from 'react';\r\nimport style from './ContactForm.module.css'\r\n\r\n\r\nconst ContactForm = ({ name, number, handleChange }) => {\r\n  return (\r\n      <div className={style.containerUser}>\r\n        <label>\r\n          <p>Name</p>\r\n          <input type=\"text\" name=\"name\" onChange={handleChange} value={name} />\r\n        </label>\r\n        <label>\r\n          <p>Number</p>\r\n          <input type=\"text\" name=\"number\" onChange={handleChange} value={number} />\r\n        </label>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n","import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport css from './Alert.module.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst AlertModal = () => {\r\n  return (\r\n    <div className=\"container-sm\">\r\n      <Alert variant=\"danger\" className={css.boxAlert}>\r\n        <Alert.Heading>Contact already exists!Oh snap! You got an error!</Alert.Heading>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertModal\r\n\r\n","import React, { Component } from 'react';\r\nimport style from './Form.module.css'\r\nimport './Form.css'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ListPeople from './ListPeople/ListPeople';\r\nimport FillterForm from './FillterForm/FillterForm';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport AlertModal from '../Alert/Alert'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../../Redux/Actions/Actions'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n}\r\n\r\nclass App extends Component {\r\n  state = {\r\n    ...initialState\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const errorContacts = this.props.contacts\r\n\r\n    if (errorContacts) {\r\n      console.log(errorContacts.length, \"errorContacts.lenght\")\r\n      const error = errorContacts.map(contact => contact)\r\n      error.find(errorItem => errorItem.name === this.state.name && errorItem.number === this.state.number)\r\n        ? this.alertShow()\r\n        : this.props.onAddContacts({ id: uuidv4(), name, number });\r\n    }\r\n    this.setState({ ...initialState })\r\n  }\r\n\r\n  alertShow = () => {\r\n    this.props.onAlertError()\r\n    setTimeout(() => this.props.onAlertError(), 5000)\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { alert } = this.props\r\n    return (\r\n      <>\r\n        {alert && <CSSTransition\r\n          classNames={style}\r\n          in={true}\r\n          appear={true}\r\n          timeout={1500}\r\n          unmountOnExit\r\n        >\r\n          <AlertModal />\r\n        </CSSTransition>}\r\n        <Form onSubmit={this.handleSubmit} className={style.formContainer}>\r\n          <CSSTransition in={true} appear={true} classNames=\"title\" timeout={1000} unmountOnExit>\r\n            <h2>Phonebook</h2>\r\n          </CSSTransition>\r\n          <ContactForm handleChange={this.handleChange} name={name} number={number} />\r\n          <FillterForm />\r\n          <ListPeople />\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ state }) => {\r\n  return {\r\n    value: state.filter,\r\n    alert: state.alert,\r\n    contacts: state.contacts,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddContacts: (name, number) => dispatch(Actions.addContact(name, number)),\r\n    onAlertError: () => dispatch(Actions.alertError())\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport Actions from '../Actions/Actions'\r\n\r\nconst onAddTask = (state, action)=>[...state, action.payload.contact];\r\nconst onRemoveContact = (state, action)=> state.filter(contact => contact.id !== action.payload.contactID)\r\n\r\nconst contacts = createReducer([], {\r\n  [Actions.addContact]: onAddTask,\r\n  [Actions.removeContact]:onRemoveContact,\r\n})\r\n\r\nconst filter = createReducer('', {\r\n  [Actions.filterChange]:(state, action)=> action.payload.filter,\r\n})\r\n\r\nconst alert = (state = false, { type, payload }) => {\r\nconsole.log(state, \"state\")\r\nconsole.log(!state, \"!state\")\r\nconsole.log(Actions.alertError.type,\"type\")\r\n  switch (type) {\r\n    case  Actions.alertError.type:\r\n    return (state = !state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ contacts, filter, alert })\r\n","import contactReducer from '../Redux/Reducers/Reducers'\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\n\r\n  const store = configureStore({\r\n    reducer: {\r\n      state: contactReducer\r\n    },\r\n  });\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/Form/Form';\r\nimport { Provider } from 'react-redux'\r\nimport './style.css'\r\nimport store from './Redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}